= Functions to Invoke the Runtime
:keywords: studio, anypoint, esb, transform, transformer, format, aggregate, rename, split, filter convert, xml, json, csv, pojo, java object, metadata, dataweave, data weave, datamapper, dwl, dfl, dw, output structure, input structure, map, mapping

.dw::Runtime

The functions described here are packaged in the Runtime module. The module is included with the Mule runtime, but you must import it to your DataWeave code by adding the line `import dw::Runtime` to your header.

.Example
[source]
----
%dw 2.0
import dw::Runtime
---
Runtime::fail("Error")
----

This module contains functions that allow you to interact with the DataWeave engine.

== Fail

=== fail(String): Nothing

Throws an exception with the specified message.

== FailIf

=== failIf(T, (value: T) => Boolean): T

Throws an exception with the specified message if the expression in the evaluator returns `true`.

== Wait

=== wait(T, Number): T

Stops the execution for the specified timeout (in milliseconds).

== See Also


// * link:dw-functions-core[Core Functions]
* link:dataweave-string-functions[String Functions]
* link:dataweave-import-task[To Import DataWeave Modules]
* link:dataweave-create-module-task[To Create a DataWeave Module]
* link:dataweave-language-introduction[DataWeave Language Introduction]
